/*
 * $Id $
 *
 * Copyright 2005 Sun Microsystems
 *
 * Initially developed by Antonio Vieiro (vieiro@dev.java.net).
 *
 * This software is released under the Common Development and Distribution
 *  License, version 1.0. See http://www.opensource.org/licenses/cddl1.php
 *  for details.
 *
 * This software is distributed on an "AS IS" basis, without warranty of any
 *  kind, either express or implied.
 *
 * All this stuff basically means that you can use this source code in your
 *  software, either proprietary or not. See 
 *  http://www.opensolaris.org/os/about/faq/licensing_faq/ for interesting
 *  information about the CDDL license.
 *
 */
package org.jdesktop.swingworker.demos.mandelbrot.view.progresspane;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import javax.swing.SwingUtilities;
import javax.swing.event.EventListenerList;

/**
 * ProgressPane is a JPanel that shows progress and allows
 *  the user to cancel the progress.
 * This panel has a black transparent background.
 * @author Antonio Vieiro (vieiro@dev.java.net)  $Author$
 */
public class ProgressPane extends javax.swing.JPanel
{
  private EventListenerList listeners;
  private static Color BACKGROUND_COLOR=new Color(0,0,0,100);
  
  /**
   * Creates new form ProgressPane 
   */
  public ProgressPane()
  {
    initComponents();
    setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
    listeners = new EventListenerList();
  }
  
  public void paintComponent( Graphics g )
  {
    g.setColor( BACKGROUND_COLOR );
    g.fillRect( 0,0, getWidth(), getHeight() );
    super.paintComponent( g );
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    pnlBusyLabel = new javax.swing.JPanel();
    lblBusyMessage = new javax.swing.JLabel();
    progressBar = new javax.swing.JProgressBar();
    cmdCancel = new javax.swing.JButton();

    setLayout(new java.awt.GridBagLayout());

    setDoubleBuffered(false);
    setOpaque(false);
    pnlBusyLabel.setLayout(new java.awt.GridBagLayout());

    pnlBusyLabel.setBackground(java.awt.Color.black);
    lblBusyMessage.setBackground(java.awt.Color.black);
    lblBusyMessage.setForeground(java.awt.Color.yellow);
    lblBusyMessage.setText("Working, please wait...");
    lblBusyMessage.setOpaque(true);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
    pnlBusyLabel.add(lblBusyMessage, gridBagConstraints);

    progressBar.setStringPainted(true);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
    pnlBusyLabel.add(progressBar, gridBagConstraints);

    cmdCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jdesktop/swingworker/demos/mandelbrot/view/icons/nuvola16/stop.png")));
    cmdCancel.setText("Stop");
    cmdCancel.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        cmdCancelActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
    pnlBusyLabel.add(cmdCancel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    add(pnlBusyLabel, gridBagConstraints);

  }
  // </editor-fold>//GEN-END:initComponents

  private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmdCancelActionPerformed
  {//GEN-HEADEREND:event_cmdCancelActionPerformed

    final ProgressPaneCancelEvent event = new ProgressPaneCancelEvent( this );
    
    SwingUtilities.invokeLater( new Runnable() {
      public void run()
      {
        fireEvent( event );
      }
    } );
        
    
  }//GEN-LAST:event_cmdCancelActionPerformed
  
  private void fireEvent( ProgressPaneCancelEvent anEvent )
  {
    ProgressPaneCancelListener [] eventListeners =
      listeners.getListeners( ProgressPaneCancelListener.class );
    for( ProgressPaneCancelListener listener : eventListeners )
    {
      listener.progressPaneCancelPressed( anEvent );
    }
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cmdCancel;
  private javax.swing.JLabel lblBusyMessage;
  private javax.swing.JPanel pnlBusyLabel;
  private javax.swing.JProgressBar progressBar;
  // End of variables declaration//GEN-END:variables

  /**
   * Getter for property busyMessage.
   * @return Value of property busyMessage.
   */
  public String getBusyMessage()
  {
    return lblBusyMessage.getText();
  }

  /**
   * Setter for property busyMessage.
   * @param busyMessage New value of property busyMessage.
   */
  public void setBusyMessage(String busyMessage)
  {
    lblBusyMessage.setText( busyMessage );
  }
  
  public void setProgress( int aProgress )
  {
    progressBar.setValue( aProgress );
  }
  
  public int getProgress()
  {
    return progressBar.getValue();
  }
  
  public void addProgressPaneCancelListener( ProgressPaneCancelListener aListener )
  {
    listeners.add( ProgressPaneCancelListener.class, aListener );
  }
  
  public void removeProgressPaneCancelListener( ProgressPaneCancelListener aListener )
  {
    listeners.remove( ProgressPaneCancelListener.class, aListener );
  }
  
}
